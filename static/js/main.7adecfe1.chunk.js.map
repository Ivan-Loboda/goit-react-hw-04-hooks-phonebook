{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js","components/ContactList/ContactList.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInputChange","target","value","e","preventDefault","onChange","type","pattern","title","required","Filter","inputChange","filter","ContactList","contactsData","onRemoveContact","map","item","className","s","listItem","onClick","id","prototypes","PropTypes","array","isRequired","func","App","JSON","parse","window","localStorage","getItem","contacts","setContacts","setFilter","useEffect","setItem","stringify","contact","uuidv4","checkedName","find","toLowerCase","alert","includes","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6RAkEeA,MA9Df,YAAoC,IAAbC,EAAY,EAAZA,SACnB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjBL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,OAAQN,GACJ,IAAK,OACDC,EAAQK,GACR,MAEJ,IAAK,SACDH,EAAUG,KAqBtB,OACI,uBAAMR,SARS,SAACS,GAChBA,EAAEC,iBACFV,EAASE,EAAME,GANfD,EAAQ,IACRE,EAAU,KAWV,UACI,0CACI,uBACIG,MAAON,EACPS,SAAUL,EACVM,KAAK,OACLV,KAAK,OACLW,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGhB,4CACI,uBACIP,MAAOJ,EACPO,SAAUL,EACVM,KAAK,MACLV,KAAK,SACLW,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGhB,wBAAQH,KAAK,SAAb,6BChDGI,EAXA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAC3B,OAAQ,0DACJ,uBACIV,MAAOU,EACPP,SAAUM,EACVL,KAAK,OACLV,KAAK,e,gCCJXiB,EAAc,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACjC,OAAQ,6BACHD,EAAaE,KAAI,SAAAC,GACd,OAAQ,qBAAkBC,UAAWC,IAAEC,SAA/B,UACJ,8BAAIH,EAAKrB,KAAT,QACA,4BAAIqB,EAAKnB,SACT,wBAAQQ,KAAK,SAASe,QAAS,kBAAMN,EAAgBE,EAAKK,KAA1D,sBAHaL,EAAKK,UAUnBT,IAEfA,EAAYU,WAAa,CACrBT,aAAcU,IAAUC,MAAMC,WAC9BX,gBAAiBS,IAAUG,KAAKD,YCqCrBE,MAnDf,WACE,MAAgCjC,oBAAS,WAAO,IAAD,EAC7C,iBAAOkC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA9C,QAA8D,MADhE,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAA4BxC,mBAAS,IAArC,mBAAOiB,EAAP,KAAewB,EAAf,KAoCA,OAlCAC,qBAAU,WACRN,OAAOC,aAAaM,QAAQ,WAAYT,KAAKU,UAAUL,MACtD,CAACA,IAiCF,qCACE,2CACA,cAAC,EAAD,CAAaxC,SApBE,SAACE,EAAME,GACxB,IAAM0C,EAAU,CACdlB,GAAImB,cACJ7C,OACAE,UAEI4C,EAAcR,EAASS,MAAK,SAAAH,GAAO,OAAI5C,EAAKgD,gBAAkBJ,EAAQ5C,KAAKgD,iBACjFF,EAAcG,MAAM,GAAD,OAAIjD,EAAJ,6BAAsCuC,EAAY,GAAD,mBAAKD,GAAL,CAAeM,QAcjF,0CACA,cAAC,EAAD,CAAQ7B,YAnCc,SAAC,GAAgB,IAAdV,EAAa,EAAbA,OACnBL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,GAEO,WAFCN,EAGJwC,EAAUlC,IA8B4BU,OAAQA,IAChD,cAAC,EAAD,CAAaE,aAXRoB,EAAStB,QAAO,SAAAK,GAAI,OAAIA,EAAKrB,KAAKgD,cAAcE,SAASlC,EAAOgC,kBAWzB7B,gBAR1B,SAACO,GAASa,EAAYD,EAAStB,QAAO,SAAAK,GAAI,OAAIA,EAAKK,KAAOA,aCxClFyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,SAAW,iC","file":"static/js/main.7adecfe1.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n    const [name, setName] = useState('')\r\n    const [number, setNumber] = useState('')\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const reset = () => {\r\n        // this.setState({ name: '', number: '' })\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    const formSubmit = (e) => {\r\n        e.preventDefault()\r\n        onSubmit(name, number)\r\n        reset();\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={formSubmit}>\r\n            <label> Name\r\n                <input\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label> Number\r\n                <input\r\n                    value={number}\r\n                    onChange={handleInputChange}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n            </label>\r\n            <button type=\"submit\">Add contact</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ inputChange, filter }) => {\r\n    return (<label>Find contacts by name\r\n        <input\r\n            value={filter}\r\n            onChange={inputChange}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n        />\r\n    </label>)\r\n}\r\n\r\nexport default Filter\r\n\r\nFilter.propTypes = {\r\n    inputChange: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n};","import PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css'\r\n\r\nconst ContactList = ({ contactsData, onRemoveContact }) => {\r\n    return (<ul>\r\n        {contactsData.map(item => {\r\n            return (<li key={item.id} className={s.listItem}>\r\n                <p>{item.name} :</p>\r\n                <p>{item.number}</p>\r\n                <button type=\"button\" onClick={() => onRemoveContact(item.id)}>Delete</button>\r\n            </li>)\r\n        })}\r\n    </ul>)\r\n\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.prototypes = {\r\n    contactsData: PropTypes.array.isRequired,\r\n    onRemoveContact: PropTypes.func.isRequired,\r\n}","import { useState, useEffect } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n\n      case 'filter':\n        setFilter(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    }\n    const checkedName = contacts.find(contact => name.toLowerCase() === contact.name.toLowerCase());\n    checkedName ? alert(`${name} is already in contacts!`) : setContacts([...contacts, contact])\n  }\n\n  const filterContact = () => {\n    // const { contacts, filter } = this.state;\n    return contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  const removeContact = (id) => { setContacts(contacts.filter(item => item.id !== id)) }\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter inputChange={handleInputChange} filter={filter} />\n      <ContactList contactsData={filterContact()} onRemoveContact={removeContact} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2vfgt\"};"],"sourceRoot":""}